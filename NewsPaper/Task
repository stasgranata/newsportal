1.Создать двух пользователей (с помощью метода User.objects.create_user('username')).

user_1 = User.objects.create_user(username="User1")
user_2 = User.objects.create_user(username="User2")

2.Создать два объекта модели Author, связанные с пользователями.

Author.objects.create(author_user=user_1)
Author.objects.create(author_user=user_2)

3.Добавить 4 категории в модель Category.

Category.objects.create(name="Sport")
Category.objects.create(name="IT")
Category.objects.create(name="Business")
Category.objects.create(name="Politics")

4.Добавить 2 статьи и 1 новость.

author = Author.objects.get(id=1)
Post.objects.create(author=author, category_type="NW", title="random_title")
author = Author.objects.get(id=2)
Post.objects.create(author=author, category_type="AR", title="random_title")
author = Author.objects.get(id=1)
Post.objects.create(author=author, category_type="AR", title="random_title")

5.Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

Post.objects.get(id=1).post_category.add(Category.objects.get(id=1))
Post.objects.get(id=1).post_category.add(Category.objects.get(id=2))
Post.objects.get(id=2).post_category.add(Category.objects.get(id=4))
Post.objects.get(id=2).post_category.add(Category.objects.get(id=5))
Post.objects.get(id=3).post_category.add(Category.objects.get(id=3))
Post.objects.get(id=3).post_category.add(Category.objects.get(id=5))

6.Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).author_user, comment_text="randomtext")
Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=2).author_user, comment_text="randomtext")
Comment.objects.create(comment_post=Post.objects.get(id=2), comment_user=Author.objects.get(id=1).author_user, comment_text="randomtext")
Comment.objects.create(comment_post=Post.objects.get(id=3), comment_user=Author.objects.get(id=2).author_user, comment_text="randomtext")
Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).author_user, comment_text="randomtext")

7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

Comment.objects.get(id=1).like()
Comment.objects.get(id=1).comment_rating
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).dislike()
Comment.objects.get(id=2).like()
Comment.objects.get(id=3).like()
Comment.objects.get(id=4).dislike()
Comment.objects.get(id=3).dislike()
Comment.objects.get(id=4).like()
Comment.objects.get(id=4).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=1).comment_rating
Comment.objects.get(id=2).comment_rating
Comment.objects.get(id=3).comment_rating
Comment.objects.get(id=4).comment_rating

8.Обновить рейтинги пользователей.

a = Author.objects.get(id=2)
a.update_rating()
a.author_rating
b = Author.objects.get(id=1)
b.update_rating()
b.author_rating
Post.objects.get(id=1).like()
Post.objects.get(id=2).like()
Post.objects.get(id=2).like()
Post.objects.get(id=3).dislike()
a = Author.objects.get(id=1)
a.update_rating()
a.author_rating
b = Author.objects.get(id=2)
b.update_rating()
b.author_rating

9.Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

a = Author.objects.order_by("-author_rating")[:1]
a
a.values("author_user", "author_rating")
for i in a:
...     i.author_user.username
...     i.author_rating
...
'User2'
a = Post.objects.order_by("-post_rating")[:1]

10.Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

a.values("creation_time", "author__author_user__username", "post_rating", "title")
Post.objects.order_by("-post_rating")
Post.objects.order_by("-post_rating")[:1]
Post.objects.get(id=2).preview()

11.Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

Post.objects.get(id=2).comment_set.all()
Post.objects.get(id=2).comment_set.all().values("comment_creation", "comment_user__username", "comment_rating", "comment_text")

